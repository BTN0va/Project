Package Newton’s method for approximating square roots (Case Study 3-2) in a function named newton . 
This function expects the input number as an argument and returns the estimate of its square root. 
The script in the file named newton.py should also include a main function that allows the user to compute square roots of inputs until she presses the enter/return key.

text=input("Enter a message: ")
distance=int(input("Enter the distance value: "))
if distance < 0 or distance >= 26:
    distance = 0

code = ""
for ch in text:
    if 'A' <= ch <= 'Z':
        # Letter is upper case, so shift it
        code+=chr(ord('A')+(ord(ch)-ord('A')+distance)%26)
    elif 'a' <= ch <= 'z':
        # Letter is lower case, so shift it
        code+=chr(ord('a')+(ord(ch)-ord('a')+distance)%26)
    else:
        # Non-alphabetic character, so just copy it
        code += ch
print(code)

Restructure Newton’s method (Case Study 3-2) by decomposing it into three cooperating functions. 
The task of testing for the limit is assigned to a function named limitReached , whereas the task of computing a new approximation is assigned to a function named improveEstimate . 
Each function, in the file named newton.py, expects the relevant arguments and returns an appropriate value.

code = input("Enter the coded text: ")
distance = int(input("Enter the distance value: "))
text = ""
for ch in code:
    text += chr(ord(ch)-distance)
    print("" + text)



import shutil

shutil.copy('example1.txt', 'example2.txt') 
